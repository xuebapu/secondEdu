{"remainingRequest":"D:\\webStromAllSpace\\secondEdu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webStromAllSpace\\secondEdu\\src\\views\\course\\index.vue?vue&type=style&index=0&id=7ab59bf8&lang=scss&scoped=true&","dependencies":[{"path":"D:\\webStromAllSpace\\secondEdu\\src\\views\\course\\index.vue","mtime":1610964953808},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubWFpbiB7DQogIGJhY2tncm91bmQ6ICNmNWY1ZjU7DQp9DQouY29udGFpbmVyIHsNCiAgd2lkdGg6IDEwODBweDsNCiAgbWFyZ2luOiAwIGF1dG87DQogIHBhZGRpbmc6IDMwcHggMDsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCi52aWRlby1ib3ggew0KICB3aWR0aDogNjAwcHg7DQogIGZsb2F0OiBsZWZ0Ow0KICBwYWRkaW5nOiAzMHB4Ow0KICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAudmlkZW8gew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIG1hcmdpbjogMCBhdXRvOw0KICAgICY6Oi13ZWJraXQtbWVkaWEtY29udHJvbHMtdGltZWxpbmUgew0KICAgICAgZGlzcGxheTogbm9uZTsNCiAgICB9DQogIH0NCiAgLmJlZW5XYXRjaGVkIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBtYXJnaW46IDAgYXV0bzsNCiAgfQ0KfQ0KLmNvbnRlbnQgew0KICB3aWR0aDogMzAwcHg7DQogIGhlaWdodDogMzAwcHg7DQogIG1hcmdpbi1sZWZ0OiAzMHB4Ow0KICBwYWRkaW5nOiAzMHB4Ow0KICBiYWNrZ3JvdW5kOiAjZmZmOw0KICBmb250LXNpemU6IDE0cHg7DQogIGNvbG9yOiAjNTU1Ow0KICBmbG9hdDogbGVmdDsNCiAgLnRpdGxlIHsNCiAgICBmb250LXNpemU6IDE4cHg7DQogICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgfQ0KfQ0KLm1pbm9yIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgLmRhdGEgew0KICAgIGNvbG9yOiAjMTY1Njk0Ow0KICB9DQogIC53b3JkIHsNCiAgICBtYXJnaW4tbGVmdDogNXB4Ow0KICAgIGNvbG9yOiBncmF5Ow0KICB9DQogIC5yb3cgew0KICAgIGhlaWdodDogMjRweDsNCiAgICBsaW5lLWhlaWdodDogMjRweDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgfQ0KICAucm93X2l0ZW0gew0KICAgIGZsZXg6IDE7DQogIH0NCn0NCi5mc19zbWFsbCB7DQogIGZvbnQtc2l6ZTogMTJweDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/course","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <div class=\"container\">\r\n      <div class=\"video-box\">\r\n        <video\r\n          :class=\"examBool==0?'video':'beenWatched'\"\r\n          id=\"videoElement\"\r\n          controls\r\n          :src=\"videoUrl\"\r\n          height=\"300px\"\r\n        ></video>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"title\">{{course.name}}</div>\r\n        <div class=\"minor\">\r\n          <div class=\"row\" style=\"display: block;\">\r\n            作者：\r\n            <span class=\"data\">{{course.realname}}</span>\r\n            <span class=\"word\">({{course.unitName}})</span>\r\n          </div>\r\n          <!-- <div class=\"row\">视频来源：</div> -->\r\n        </div>\r\n        <div class=\"minor fs_small\">\r\n          <div class=\"row\">\r\n            <div class=\"row_item\">发布时间：{{course.createTime}}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"row_item\">时长：{{getTotalTime(course.time)}}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"row_item\">分类： {{course.courseTypes}}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"row_item\">关键词：{{course.keywords}}</div>\r\n          </div>\r\n          <div class=\"row\" style=\"margin-top:30px\">\r\n            <div class=\"row_item\">\r\n              <el-button\r\n                type=\"success\"\r\n                @click=\"getFile(course.fileUrl)\"\r\n                size=\"mini\"\r\n                icon=\"el-icon-notebook-1\"\r\n                :loading=\"courseLoading\"\r\n                :disabled=\"course.fileUrl==''\"\r\n              >课件</el-button>\r\n              <el-button\r\n                type=\"warning\"\r\n                icon=\"el-icon-star-off\"\r\n                size=\"mini\"\r\n                @click=\"star\"\r\n                :loading=\"loading\"\r\n              >\r\n                <span v-show=\"!isStar\">收藏</span>\r\n                <span v-show=\"isStar\">取消收藏</span>\r\n              </el-button>\r\n              <!-- <el-button\r\n                :disabled=\"examBool==0\"\r\n                type=\"primary\"\r\n                icon=\"el-icon-document\"\r\n                size=\"mini\"\r\n                @click=\"goExam\"\r\n              >进入考试</el-button> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\" scoped>\r\n.main {\r\n  background: #f5f5f5;\r\n}\r\n.container {\r\n  width: 1080px;\r\n  margin: 0 auto;\r\n  padding: 30px 0;\r\n  overflow: hidden;\r\n}\r\n.video-box {\r\n  width: 600px;\r\n  float: left;\r\n  padding: 30px;\r\n  background: #fff;\r\n  .video {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    &::-webkit-media-controls-timeline {\r\n      display: none;\r\n    }\r\n  }\r\n  .beenWatched {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n.content {\r\n  width: 300px;\r\n  height: 300px;\r\n  margin-left: 30px;\r\n  padding: 30px;\r\n  background: #fff;\r\n  font-size: 14px;\r\n  color: #555;\r\n  float: left;\r\n  .title {\r\n    font-size: 18px;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n.minor {\r\n  margin-bottom: 20px;\r\n  .data {\r\n    color: #165694;\r\n  }\r\n  .word {\r\n    margin-left: 5px;\r\n    color: gray;\r\n  }\r\n  .row {\r\n    height: 24px;\r\n    line-height: 24px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .row_item {\r\n    flex: 1;\r\n  }\r\n}\r\n.fs_small {\r\n  font-size: 12px;\r\n}\r\n</style>\r\n<script>\r\nimport flvjs from \"flv.js\";\r\nimport {\r\n  courseDetail,\r\n  courseStatus,\r\n  collectionCourse,\r\n  isCollectionCourse,\r\n  studyStatus,\r\n} from \"@/api/course\";\r\nimport { onlinePreview } from \"../../api/admin\";\r\nimport { totalTime } from \"../../utils/index\";\r\nexport default {\r\n  name: \"CourseIndex\",\r\n  data() {\r\n    return {\r\n      bacBase: this.$store.getters.bacBase,\r\n      id: \"\",\r\n      courseId: \"\",\r\n      userId: \"\",\r\n      course: {},\r\n      curTime: \"0.0\",\r\n      MaxTime: \"0.0\",\r\n      timer: null,\r\n      videoUrl: \"\",\r\n      isStar: false,\r\n      loading: false,\r\n      courseLoading: false,\r\n      examBool: 0, //是否可进入考试\r\n    };\r\n  },\r\n  created() {\r\n    // window.addEventListener(\"beforeunload\", (e) => this.continue(e));\r\n  },\r\n  mounted() {\r\n    // window.addEventListener(\"beforeunload\", (e) => this.continue(e));\r\n    this.init();\r\n  },\r\n  methods: {\r\n    getTotalTime(x) {\r\n      return totalTime(x);\r\n    },\r\n    //进入考试\r\n    goExam() {\r\n      this.$router.push({\r\n        path: \"/exam\",\r\n        query: {\r\n          userId: this.course.userId,\r\n          courseId: this.course.id,\r\n        },\r\n      });\r\n    },\r\n    //课件\r\n    getFile(x) {\r\n      this.courseLoading = true;\r\n      let obj = {\r\n        url: x,\r\n        type: \"image\",\r\n      };\r\n      onlinePreview(obj).then((res) => {\r\n        this.courseLoading = false;\r\n        if (res.data.msg != null) {\r\n          this.$message.error(\"课件出错，无法访问\");\r\n        } else {\r\n          let newPage = this.$router.resolve({\r\n            path: \"/preview\",\r\n            query: {\r\n              url: x,\r\n              type: \"image\",\r\n            },\r\n          });\r\n          window.open(newPage.href, \"_blank\");\r\n        }\r\n      });\r\n      // window.open(this.bacBase + x, \"_blank\");\r\n    },\r\n    timeInterval() {\r\n      this.timer = setInterval(() => {\r\n        courseStatus(this.id, 0, this.curTime).then((res) => {\r\n          // console.log(res);\r\n        });\r\n      }, 5000);\r\n    },\r\n    // //断点续播，刷新或关闭\r\n    // continue(e) {\r\n    //   console.log(e)\r\n    //   e = e || window.event;\r\n    //   if (e) {\r\n    //     e.returnValue = \"您是否确认离开此页面-您输入的数据可能不会被保存\";\r\n    //   }\r\n    //   return \"您是否确认离开此页面-您输入的数据可能不会被保存\";\r\n    //   // ...\r\n    // },\r\n    viderRender() {\r\n      var that = this;\r\n      let dura = 0;\r\n      let last = Number(this.curTime);\r\n      var videoElement = document.getElementById(\"videoElement\");\r\n      videoElement.addEventListener(\"play\", () => {\r\n        //播放开始执行的函数\r\n        console.log(\"开始播放\");\r\n        videoElement.currentTime = this.curTime;\r\n        console.log(videoElement.currentTime);\r\n        let cur = videoElement.currentTime.toFixed(1);\r\n        this.timeInterval();\r\n        if (cur == \"0.0\") {\r\n          console.log(\"123\");\r\n          let id = this.id;\r\n          courseStatus(id, 0, cur).then((res) => {\r\n            console.log(res);\r\n          });\r\n        }\r\n      });\r\n      videoElement.addEventListener(\"loadedmetadata\", () => {\r\n        videoElement.currentTime = that.curTime;\r\n        dura = videoElement.duration;\r\n        videoElement.addEventListener(\"timeupdate\", handle);\r\n      });\r\n      function handle() {\r\n        let cur = videoElement.currentTime.toFixed(1);\r\n        that.curTime = videoElement.currentTime.toFixed(1);\r\n        that.MaxTime = cur >= that.MaxTime ? cur : that.MaxTime;\r\n        // console.log(that.MaxTime);\r\n        // console.log(last);\r\n        // 禁止前进后退\r\n        if (cur - last > 2 || cur - last < 0) {\r\n          videoElement.currentTime = last;\r\n        } else {\r\n          last = cur;\r\n        }\r\n        if (dura - cur <= 0) {\r\n          let id = that.id;\r\n          clearInterval(that.timer);\r\n          courseStatus(id, 1, that.curTime).then((res) => {\r\n            this.examBool = 1;\r\n            location.reload();\r\n            console.log(res);\r\n          });\r\n\r\n          videoElement.removeEventListener(\"timeupdate\", handle);\r\n        }\r\n      }\r\n    },\r\n    init() {\r\n      this.id = this.$route.query.id;\r\n      courseDetail(this.id).then((res) => {\r\n        console.log(res);\r\n        if (res.code == 567) {\r\n          this.$router.push({\r\n            path: \"/courseList\",\r\n            query: { id: this.$route.query.courseId },\r\n          });\r\n          this.$message.error(\"请先购买该课程\");\r\n          return;\r\n        } else if (res.code == 200) {\r\n          this.course = res.data;\r\n          let videoUrl = res.data.videoUrl;\r\n          console.log(videoUrl);\r\n          if (videoUrl.indexOf(\"http\") == -1) {\r\n            videoUrl = this.bacBase + videoUrl;\r\n            // videoUrl='ftp://192.168.1.82/R443-0008-R.mp4'\r\n            let type = this.course.videoUrl.split(\".\")[1];\r\n            console.log(type, videoUrl);\r\n            //   if (flvjs.isSupported()) {\r\n            //     var videoElement = document.getElementById(\"videoElement\");\r\n            //     var flvPlayer = flvjs.createPlayer({\r\n            //       type: type,\r\n            //       url: videoUrl,\r\n            //     });\r\n            //     flvPlayer.attachMediaElement(videoElement);\r\n            //     flvPlayer.load();\r\n            //   }\r\n\r\n            // 强制播放\r\n            var videoElement = document.getElementById(\"videoElement\");\r\n            var flvPlayer = flvjs.createPlayer({\r\n              type: type,\r\n              url: videoUrl,\r\n            });\r\n            flvPlayer.attachMediaElement(videoElement);\r\n            flvPlayer.load();\r\n          } else {\r\n            this.videoUrl = videoUrl;\r\n          }\r\n        }else{\r\n          this.$message.error(res.msg)\r\n        }\r\n      });\r\n      this.getStudyStatus();\r\n      isCollectionCourse(this.id).then((res) => {\r\n        this.isStar = res.data;\r\n      });\r\n    },\r\n    //学习进度回显\r\n    getStudyStatus() {\r\n      studyStatus({ courseId: this.id }).then((res) => {\r\n        console.log(res.data);\r\n        this.examBool = res.data[0] ? res.data[0].status : 0;\r\n        this.curTime = res.data[0]\r\n          ? res.data[0].learningTime == \"undefined\"\r\n            ? \"0.0\"\r\n            : res.data[0].learningTime\r\n          : \"0.0\";\r\n        this.MaxTime = this.curTime;\r\n        if (this.examBool == 0) {\r\n          this.viderRender();\r\n        }\r\n      });\r\n    },\r\n    star() {\r\n      this.loading = true;\r\n      collectionCourse(this.id)\r\n        .then((res) => {\r\n          this.loading = false;\r\n          this.isStar = res.data;\r\n        })\r\n        .catch((error) => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n  },\r\n  beforeRouteLeave: (to, from, next) => {\r\n    //断点续播跳转\r\n    if (from.timer) {\r\n      clearInterval(from.timer);\r\n    }\r\n    next();\r\n  },\r\n  destroyed() {\r\n    // window.removeEventListener(\"beforeunload\", (e) => this.test(e));\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n    }\r\n  },\r\n};\r\n</script>"]}]}