{"remainingRequest":"D:\\webStromAllSpace\\secondEdu\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\webStromAllSpace\\secondEdu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\webStromAllSpace\\secondEdu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webStromAllSpace\\secondEdu\\src\\views\\myOrder\\myOrder.vue?vue&type=template&id=4eaa934b&scoped=true&","dependencies":[{"path":"D:\\webStromAllSpace\\secondEdu\\src\\views\\myOrder\\myOrder.vue","mtime":1610964953827},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webStromAllSpace\\secondEdu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}